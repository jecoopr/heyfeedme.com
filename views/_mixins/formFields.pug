mixin subdocField(field, fieldScope, data, i)
  -var schema = field.schema.paths
  if data
    -var schemaPopulated = filters.db.schemaPopulated(data, schema)
  +formFieldsFromSchema(
    filters.stripPrivates(schemaPopulated || schema),
    'fg-subfg',
    fieldScope,
    i
  )

mixin formFieldStringNum(val, options, sName, siName)
  if Array.isArray(options.type)
    - options = options.type[0]
  if options.longText
    textarea(
      id=siName
      name=sName
      maxlength=options.maxlength
    ).form-field.ff-wide= val
  else if options.file
    .form-field.ff-wide
      input(
        type='file'
        name=sName
      )
    if options.file === 'image' && val
      img(src=`/${val}`).form-field.ff-wide
    else
      p= val
  else
    input(id=siName name=sName type='text' value=val).form-field.ff-wide

mixin formFieldsFromSchema(fields, fgClass, fieldScope, i)
  each field, key in fields
    -var type = field.instance
    -var sName = fieldScope ? `${fieldScope}.${key}` : key
    -var siName = i !== undefined ? `${i}${sName}` : sName

    .form-group(class=fgClass)
      label(for=siName).label.heading.h4= key
        if type === 'Array'
          span= ` (${field.data.length})`

      if type === 'Array'
        if field.$isMongooseDocumentArray
          div(class=`js-form-add-${key}`)
            each value, i in field.data
              .form-group.fg-spread.fg-subfg-wrap(class=`fg-${key}`)
                +subdocField(field, key, value, i)
            if !field.data.length
              .form-group.fg-spread.fg-subfg-wrap(class=`fg-${key}`)
                +subdocField(field, key, value)
          .text-center
            button(data-form-add=key).btn.btn-2.js-form-add Add more

        else if field.caster.enumValues && field.caster.enumValues.length
          .form-group.fg-spread
            each option in field.caster.enumValues
              .form-group
                label(for=siName + option).label-2= option
                input(
                  type='checkbox'
                  id=`${siName}${option}`
                  name=sName
                  value=option
                  checked=field.data && field.data.indexOf(option) > -1
                ).no-space

        else
          .form-group(class=`js-form-add-${key}`)
            each value in field.data
              +formFieldStringNum(value, field.options, sName, siName)
            if !field.data.length
              +formFieldStringNum(value, field.options, sName, siName)
          .text-center
            button(data-form-add=key).btn.btn-2.js-form-add Add more

      else if type === 'Boolean'
        .form-field.ff-wide
          input(
            id=siName
            name=sName
            type='checkbox'
            checked=field.data
          )

      else if type === 'Date'
        if field.options.fixed
          input(
            id=siName
            type='text'
            value=field.data ? filters.moment(field.data).format('MMMM DD YYYY HH:mm:ss') : null
            readonly
          ).form-field.ff-wide
          if field.options.current
            input(
              type='hidden'
              name=siName
              value=filters.moment()
            )
        else
          input(
            id=siName
            name=sName
            type='date'
            value=filters.moment(field.data).format('YYYY-MM-DD')
          ).form-field.ff-wide

      else if type === 'String' || type === 'Number'
        +formFieldStringNum(field.data, field.options, sName, siName)
